#!/bin/bash

# The view directory to make
target="$1" ; shift

# the exact spec for the seed, needed if multiple are installed.
spec="$1" ; shift

# the package to spack-install and the (excluded) seed for the spack
# view
seed="${1:-wire-cell-toolkit}" ; shift

if [ -z "$target" ] ; then
    echo "usage: wct-project.sh /path/to/target [<spec>]"
    exit 1
fi

# set -x

for maybe in /srv/spack/local/bin/spack $HOME/opt/spack/bin/spack
do
    if [ -x "$maybe" ] ; then
        spack="$maybe"
        echo "Found spack at $spack"
        break
    fi
done
if [ -z "$spack" ] ; then
    echo "No spack found" 1>&2
    exit 1
fi

tdir="$(realpath "$target")"

if [ -f "$tdir/.envrc" ] ; then
    echo "Project area exits: $tdir"
    exit 1
fi

if [ -z "$spec" ] ; then
    spec="$( "$spack" find -l -v "$seed" | tail -1 | awk '{print $1}' )"
    if [ "$spec" = "==>" ] ; then
        echo "Failed to find $seed in spack, try:"
        echo "  spack install $seed"
        echo "See https://github.com/wirecell/wire-cell-spack"
        exit 1
    fi
    spec="/$spec"
    echo "Found spec: $spec for $seed"
fi

mkdir -p "$tdir"
cd "$tdir" || exit 1

# We exclude wire-cell-toolkit itself since we will install that by
# hand into the view.
"$spack" view add -e "$seed" -i local "$spec" || exit 1

if [ -d python ] ; then
    echo "wire-cell-python is already cloned"
else
    git clone git@github.com:wirecell/wire-cell-python.git python
fi
if [ -d toolkit ] ; then
    echo "wire-cell-toolkit is already cloned"
else
    git clone git@github.com:wirecell/wire-cell-toolkit.git toolkit
fi


cat <<EOF > .envrc

load_prefix local
export WIRECELL_PREFIX=\$PWD/local
export WIRECELL_CONFIG="cd \$PWD/toolkit && 
./wcb configure \
   --prefix=\$WIRECELL_PREFIX \
   --with-jsonnet=\$WIRECELL_PREFIX \
   --with-jsonnet-libs=gojsonnet \
   --with-eigen-include=\$WIRECELL_PREFIX/include/eigen3 \
   --boost-mt --boost-libs=\$WIRECELL_PREFIX/lib --boost-include=\$WIRECELL_PREFIX/include &&
cd -"
export WIRECELL_BUILD="cd \$PWD/toolkit && ./wcb install --notests && cd -"
path_add WIRECELL_PATH \$PWD/toolkit/cfg
path_add WIRECELL_PATH \$HOME/opt/wire-cell-data
layout python3
EOF


cat <<EOF

### Next steps:

# 1. Check and customize the .envrc file.

cat $tdir/.envrc

# 2. Change to the working area and allow direnv (one time)

cd $tdir && direnv allow

# 3. Install wire-cell-python

cd python/ && pip install -e . && cd -

# 4. Pick desired WCT branch, or simply keep with the main branch

cd toolkit/
git checkout -b v0.24.1 v0.24.1

# 5. Configure and execute the build.
# The .envrc file provides these commands as shell variables.

bash -c "\$WIRECELL_CONFIG"
bash -c "\$WIRECELL_BUILD"

EOF


